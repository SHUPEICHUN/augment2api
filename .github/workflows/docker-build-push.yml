name: Multi-Arch Docker Build & Export

on:
  push:
    tags: [ "v*.*.*" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            suffix: amd64
          - platform: linux/arm64
            suffix: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      #  Docker 登录步骤
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Docker environment
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Configure QEMU
        uses: docker/setup-qemu-action@v3

      - name: Generate metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/augment2api
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.ref_name == 'master' }}
            type=semver,pattern={{version}},prefix=v
            type=raw,value=${{ matrix.suffix }},suffix=-{{ date 'yyyyMMdd' }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true  # 显式启用推送
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ github.ref_name }}-${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ github.ref_name }}-${{ matrix.platform }}
          build-args: |
            GO_VERSION=1.23
            BUILD_DATE=${{ steps.meta.outputs.annotations }}

      # 优化部署包生成逻辑
      - name: Generate deployment package
        if: ${{ matrix.platform == 'linux/amd64' && github.ref_name == 'master' }}
        env:
          IMAGE_TAG: ${{ steps.meta.outputs.tags }}
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/augment2api:$IMAGE_TAG
          mkdir -p deploy
          docker save ${{ secrets.DOCKERHUB_USERNAME }}/augment2api:$IMAGE_TAG | gzip > deploy/augment2api-$(date +%s).tar.gz

      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: augment2api-${{ github.run_id }}
          path: deploy/*.tar.gz
          retention-days: 3
