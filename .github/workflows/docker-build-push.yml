name: Multi-Arch Docker Build & Export

on:
  push:
    branches: [ "master" ]
    tags: [ "v*.*.*" ]

jobs:
  build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64, linux/arm/v7]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 多平台构建准备
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 动态标签生成
      - name: Generate image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/augment2api
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      # 多平台构建 + 缓存优化
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GO_VERSION=1.23

      # 生成单平台本地部署包（仅限 amd64）
      - name: Export AMD64 image
        if: ${{ matrix.platform == 'linux/amd64' && github.ref == 'refs/heads/main' }}
        run: |
          docker buildx build --platform=linux/amd64 --load -t ${{ secrets.DOCKERHUB_USERNAME }}/augment2api:local .
          docker save -o augment2api.tar ${{ secrets.DOCKERHUB_USERNAME }}/augment2api:local
          gzip augment2api.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: augment2api-amd64
          path: augment2api.tar.gz